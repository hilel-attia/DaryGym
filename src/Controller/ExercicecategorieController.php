<?php

namespace App\Controller;

use App\Entity\Exercicecategorie;
use App\Form\ExercicecategorieType;
use App\Repository\ExercicecategorieRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * @Route("/exercicecategorie")
 */
class ExercicecategorieController extends AbstractController
{
    /**
     * @Route("/", name="exercicecategorie_index", methods={"GET"})
     */
    public function index(ExercicecategorieRepository $exercicecategorieRepository): Response
    {
        return $this->render('exercicecategorie/index.html.twig', [
            'exercicecategories' => $exercicecategorieRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new", name="exercicecategorie_new", methods={"GET", "POST"})
     */
    public function new(Request $request, EntityManagerInterface $entityManager): Response
    {
        $exercicecategorie = new Exercicecategorie();
        $form = $this->createForm(ExercicecategorieType::class, $exercicecategorie);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $file=$exercicecategorie->getImage();


            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move($this->getParameter('photos_directory'),$filename);

            $exercicecategorie->setImage($filename);

            $entityManager->persist($exercicecategorie);
            $entityManager->flush();

            return $this->redirectToRoute('exercicecategorie_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->render('exercicecategorie/new.html.twig', [
            'exercicecategorie' => $exercicecategorie,
            'form' => $form->createView(),
        ]);
    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/{id}", name="exercicecategorie_show", methods={"GET"})
     */
    public function show(Exercicecategorie $exercicecategorie): Response
    {
        return $this->render('exercicecategorie/show.html.twig', [
            'exercicecategorie' => $exercicecategorie,
        ]);
    }

    /**
     * @Route("/{id}/edit", name="exercicecategorie_edit", methods={"GET", "POST"})
     */
    public function edit(Request $request, Exercicecategorie $exercicecategorie, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(ExercicecategorieType::class, $exercicecategorie);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $file=$exercicecategorie->getImage();


            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move($this->getParameter('photos_directory'),$filename);

            $exercicecategorie->setImage($filename);
            $entityManager->flush();

            return $this->redirectToRoute('exercicecategorie_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->render('exercicecategorie/edit.html.twig', [
            'exercicecategorie' => $exercicecategorie,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}", name="exercicecategorie_delete", methods={"POST"})
     */
    public function delete(Request $request, Exercicecategorie $exercicecategorie, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete'.$exercicecategorie->getId(), $request->request->get('_token'))) {
            $entityManager->remove($exercicecategorie);
            $entityManager->flush();
        }

        return $this->redirectToRoute('exercicecategorie_index', [], Response::HTTP_SEE_OTHER);
    }

    /*public function afficher(ExercicecategorieRepository $exercicecategorieRepository): Response
    {
        return $this->render('front/enligne.html.twig', [
            'exercicecategories' => $exercicecategorieRepository->findAll(),
        ]);
    }*/



}
