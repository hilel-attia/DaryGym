<?php

namespace App\Controller;


use App\Entity\Exercice;
use App\Entity\Exercicecategorie;
use App\Form\ExerciceType;
use App\Repository\ExerciceRepository;
use App\Repository\ExercicecategorieRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;


/**
 * @Route("/exercice")
 */
class ExerciceController extends AbstractController
{
    /**
     * @Route("/", name="exercice_index", methods={"GET"})
     */
    public function index(ExerciceRepository $exerciceRepository): Response
    {
        return $this->render('exercice/index.html.twig', [
            'exercices' => $exerciceRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new", name="exercice_new", methods={"GET", "POST"})
     */
    public function new(Request $request, EntityManagerInterface $entityManager): Response
    {
        $exercice = new Exercice();
        $form = $this->createForm(ExerciceType::class, $exercice);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            $entityManager = $this->getDoctrine()->getManager();
           ## $file = $form->get('image')->getData();
            $file=$exercice->getImage();
            $file2=$exercice->getVideo();
            $file3=$exercice->getDocs();
            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $filename2=$this->generateUniqueFileName().'.'.$file2->guessExtension();
            $filename3=$this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file->move($this->getParameter('photos_directory'),$filename);
            $file2->move($this->getParameter('videos_directory'),$filename2);
            $file3->move($this->getParameter('documents_directory'),$filename3);
            $exercice->setImage($filename);
            $exercice->setVideo($filename2);
            $exercice->setDocs($filename3);

            $entityManager->persist($exercice);

            $entityManager->flush();

            return $this->redirectToRoute('exercice_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->render('exercice/new.html.twig', [
            'exercice' => $exercice,
            'form' => $form->createView(),
        ]);
    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/{id}", name="exercice_show", methods={"GET"})
     */
    public function show(Exercice $exercice): Response
    {
        return $this->render('exercice/show.html.twig', [
            'exercice' => $exercice,
        ]);
    }

    /**
     * @Route("/{id}/edit", name="exercice_edit", methods={"GET", "POST"})
     */
    public function edit(Request $request, Exercice $exercice, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(ExerciceType::class, $exercice);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $file=$exercice->getImage();
            $file2=$exercice->getVideo();
            $file3=$exercice->getDocs();
            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $filename2=$this->generateUniqueFileName().'.'.$file2->guessExtension();
            $filename3=$this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file->move($this->getParameter('photos_directory'),$filename);
            $file2->move($this->getParameter('videos_directory'),$filename2);
            $file3->move($this->getParameter('documents_directory'),$filename3);
            $exercice->setImage($filename);
            $exercice->setVideo($filename2);
            $exercice->setDocs($filename3);

            $entityManager->persist($exercice);
            $entityManager->flush();


            return $this->redirectToRoute('exercice_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->render('exercice/edit.html.twig', [
            'exercice' => $exercice,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}", name="exercice_delete", methods={"POST"})
     */
    public function delete(Request $request, Exercice $exercice, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete'.$exercice->getId(), $request->request->get('_token'))) {
            $entityManager->remove($exercice);
            $entityManager->flush();
        }

        return $this->redirectToRoute('exercice_index', [], Response::HTTP_SEE_OTHER);
    }

    /**
     * @Route("/front/enligne", name="enligne", methods={"GET"})
     */
   public function afficher()
    {
         $categories=$this->getDoctrine()->getRepository(Exercicecategorie::class)->findAll();
         $exercices=$this->getDoctrine()->getRepository(Exercice::class)->findBy(array('Exercicecategorie'=>$categories));

     return $this->render('front/enligne.html.twig',['exercices'=>$exercices,
                                                           'categories' =>$categories                    ]);



   }}
