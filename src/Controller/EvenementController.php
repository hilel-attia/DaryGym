<?php

namespace App\Controller;

use App\Entity\Evenement;
use App\Form\EvenementType;
use phpDocumentor\Reflection\Type;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Contracts\EventDispatcher\Event;




class EvenementController extends AbstractController
{
    /**
     *@Route("/",name="event-list")
     */
    public function home()
    {
        $evenement= $this->getDoctrine()->getRepository(Evenement::class)->findAll();
        return  $this->render('admin/evenement/index.html.twig',['evenement' => $evenement]);
    }


    /**
     * @Route("/evenement", name="evenement")
     */
    public function Contact()
    {
        $form = $this->createForm(EvenementType::class);
        return $this->render('admin/evenement/evenement.html.twig',['form' => $form->createView()]);
    }

    /**
     * @Route("/Ajoute", name="Ajoute-event")
     */
    public function Ajoute(Request $request)
    {
        $event = new Evenement();
        $form = $this->createForm(EvenementType::class, $event);

        $form->handleRequest($request);
        if($form->isSubmitted()&& $form->isValid()){

            $file=$event->getImage();
            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move($this->getParameter('photos_directory'),$filename);

            $event->setImage($filename);
            $em = $this->getDoctrine()->getManager();
            $em->persist($event);
            $em->flush();
            return $this->redirectToRoute('event-list');
        }
        return $this->render("admin/evenement/evenement.html.twig",['form'=> $form->createView()]);
    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    /**
     * @Route("/update/{id}", name="updateEvenement")
     */
    public function update(Request $request, $id)
    {
        $event = $this->getDoctrine()->getRepository(Evenement::class)->find($id);
        $form = $this->createForm(EvenementType::class, $event);
        $form->handleRequest($request);
        if($form->isSubmitted()&& $form->isValid()){
            $file=$event->getImage();


            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move($this->getParameter('photos_directory'),$filename);

            $event->setImage($filename);
            $em = $this->getDoctrine()->getManager();
            $em->flush();
            return $this->redirectToRoute('event-list');
        }
        return $this->render("admin/evenement/edit.html.twig", array('form' => $form->createView()));
    }

    /**
     * @Route("/supp/{id}", name="deleteEvenement")
     */
    public function suppc($id): Response
    {  //recupere le classroom a supprime
        $event=$this->getDoctrine()->getRepository(Evenement::class)->find($id);
        //on passe a la supppresion
        $em=$this->getDoctrine()->getManager();
        $em->remove($event);
        $em->flush();
        return $this->redirectToRoute('event-list');

    }
}

